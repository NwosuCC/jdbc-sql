20190717 - 1

/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

Last login: Wed Jul 17 16:38:28 on ttys000
Deciano:~ cypriannwosu$ node --version
-bash: node: command not found
Deciano:~ cypriannwosu$ brew install node
Updating Homebrew...
==> Installing dependencies for node: icu4c
==> Installing node dependency: icu4c
==> Downloading https://homebrew.bintray.com/bottles/icu4c-64.2.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/e8/e858556120acc0c2d52b8fb572b677856724cc28d24a7e1b2
######################################################################## 100.0%
==> Pouring icu4c-64.2.mojave.bottle.tar.gz
==> Caveats
icu4c is keg-only, which means it was not symlinked into /usr/local,
because macOS provides libicucore.dylib (but nothing else).

If you need to have icu4c first in your PATH run:
  echo 'export PATH="/usr/local/opt/icu4c/bin:$PATH"' >> ~/.bash_profile
  echo 'export PATH="/usr/local/opt/icu4c/sbin:$PATH"' >> ~/.bash_profile

For compilers to find icu4c you may need to set:
  export LDFLAGS="-L/usr/local/opt/icu4c/lib"
  export CPPFLAGS="-I/usr/local/opt/icu4c/include"

==> Summary
🍺  /usr/local/Cellar/icu4c/64.2: 257 files, 69.2MB
==> Installing node
==> Downloading https://homebrew.bintray.com/bottles/node-12.6.0.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/0e/0e41a4bbf4ca3a05377d864e3d462ddb139c2560780627307
######################################################################## 100.0%
==> Pouring node-12.6.0.mojave.bottle.tar.gz
==> Caveats
Bash completion has been installed to:
  /usr/local/etc/bash_completion.d
==> Summary
🍺  /usr/local/Cellar/node/12.6.0: 4,515 files, 53.0MB
==> `brew cleanup` has not been run in 30 days, running now...
==> Caveats
==> icu4c
icu4c is keg-only, which means it was not symlinked into /usr/local,
because macOS provides libicucore.dylib (but nothing else).

If you need to have icu4c first in your PATH run:
  echo 'export PATH="/usr/local/opt/icu4c/bin:$PATH"' >> ~/.bash_profile
  echo 'export PATH="/usr/local/opt/icu4c/sbin:$PATH"' >> ~/.bash_profile

For compilers to find icu4c you may need to set:
  export LDFLAGS="-L/usr/local/opt/icu4c/lib"
  export CPPFLAGS="-I/usr/local/opt/icu4c/include"

==> node
Bash completion has been installed to:
  /usr/local/etc/bash_completion.d
Deciano:~ cypriannwosu$ node --version
v12.6.0
Deciano:~ cypriannwosu$ npm --version
6.9.0
Deciano:~ cypriannwosu$ git --version
git version 2.20.1 (Apple Git-117)
Deciano:~ cypriannwosu$ brew update && brew upgrade && brew cleanup && brew doctor
Already up-to-date.
Your system is ready to brew.
Deciano:~ cypriannwosu$ composer
-bash: composer: command not found
Deciano:~ cypriannwosu$ brew install composer
Updating Homebrew...
==> Downloading https://getcomposer.org/download/1.8.6/composer.phar
######################################################################## 100.0%
🍺  /usr/local/Cellar/composer/1.8.6: 3 files, 1.8MB, built in 8 seconds
Deciano:~ cypriannwosu$ composer -v
   ______
  / ____/___  ____ ___  ____  ____  ________  _____
 / /   / __ \/ __ `__ \/ __ \/ __ \/ ___/ _ \/ ___/
/ /___/ /_/ / / / / / / /_/ / /_/ (__  )  __/ /
\____/\____/_/ /_/ /_/ .___/\____/____/\___/_/
                    /_/
Composer version 1.8.6 2019-06-11 15:03:05

Usage:
  command [options] [arguments]

Options:
  -h, --help                     Display this help message
  -q, --quiet                    Do not output any message
  -V, --version                  Display this application version
      --ansi                     Force ANSI output
      --no-ansi                  Disable ANSI output
  -n, --no-interaction           Do not ask any interactive question
      --profile                  Display timing and memory usage information
      --no-plugins               Whether to disable plugins.
  -d, --working-dir=WORKING-DIR  If specified, use the given directory as working directory.
  -v|vv|vvv, --verbose           Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  about                Shows the short information about Composer.
  archive              Creates an archive of this composer package.
  browse               Opens the package's repository URL or homepage in your browser.
  check-platform-reqs  Check that platform requirements are satisfied.
  clear-cache          Clears composer's internal package cache.
  clearcache           Clears composer's internal package cache.
  config               Sets config options.
  create-project       Creates new project from a package into given directory.
  depends              Shows which packages cause the given package to be installed.
  diagnose             Diagnoses the system to identify common errors.
  dump-autoload        Dumps the autoloader.
  dumpautoload         Dumps the autoloader.
  exec                 Executes a vendored binary/script.
  global               Allows running commands in the global composer dir ($COMPOSER_HOME).
  help                 Displays help for a command
  home                 Opens the package's repository URL or homepage in your browser.
  i                    Installs the project dependencies from the composer.lock file if present, or falls back on the composer.json.
  info                 Shows information about packages.
  init                 Creates a basic composer.json file in current directory.
  install              Installs the project dependencies from the composer.lock file if present, or falls back on the composer.json.
  licenses             Shows information about licenses of dependencies.
  list                 Lists commands
  outdated             Shows a list of installed packages that have updates available, including their latest version.
  prohibits            Shows which packages prevent the given package from being installed.
  remove               Removes a package from the require or require-dev.
  require              Adds required packages to your composer.json and installs them.
  run-script           Runs the scripts defined in composer.json.
  search               Searches for packages.
  self-update          Updates composer.phar to the latest version.
  selfupdate           Updates composer.phar to the latest version.
  show                 Shows information about packages.
  status               Shows a list of locally modified packages, for packages installed from source.
  suggests             Shows package suggestions.
  u                    Upgrades your dependencies to the latest version according to composer.json, and updates the composer.lock file.
  update               Upgrades your dependencies to the latest version according to composer.json, and updates the composer.lock file.
  upgrade              Upgrades your dependencies to the latest version according to composer.json, and updates the composer.lock file.
  validate             Validates a composer.json and composer.lock.
  why                  Shows which packages cause the given package to be installed.
  why-not              Shows which packages prevent the given package from being installed.
Deciano:~ cypriannwosu$ composer --version
Composer version 1.8.6 2019-06-11 15:03:05
Deciano:~ cypriannwosu$ brew install php
==> Installing dependencies for php: apr, openssl, apr-util, argon2, aspell, autoconf, brotli, c-ares, libidn, libmetalink, libssh2, jansson, jemalloc, libev, libevent, nghttp2, openldap, rtmpdump, curl-openssl, libtool, unixodbc, freetds, libpng, freetype, gettext, libffi, pcre, gdbm, readline, sqlite, xz, python, glib, gmp, jpeg, libpq, libsodium, libzip, tidy-html5, libtiff and webp
==> Installing php dependency: apr
==> Downloading https://homebrew.bintray.com/bottles/apr-1.7.0.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/3a/3a245185ed7280d1a19e7c639786b4c21dd0088878be8ac87
######################################################################## 100.0%
==> Pouring apr-1.7.0.mojave.bottle.tar.gz
==> Caveats
apr is keg-only, which means it was not symlinked into /usr/local,
because Apple's CLT package contains apr.

If you need to have apr first in your PATH run:
  echo 'export PATH="/usr/local/opt/apr/bin:$PATH"' >> ~/.bash_profile

==> Summary
🍺  /usr/local/Cellar/apr/1.7.0: 59 files, 1.4MB
==> Installing php dependency: openssl
==> Downloading https://homebrew.bintray.com/bottles/openssl-1.0.2s.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/c4/c4a762d719c2be74ac686f1aafabb32f3c5d5ff3a98935c49
######################################################################## 100.0%
==> Pouring openssl-1.0.2s.mojave.bottle.tar.gz
==> Caveats
A CA file has been bootstrapped using certificates from the SystemRoots
keychain. To add additional certificates (e.g. the certificates added in
the System keychain), place .pem files in
  /usr/local/etc/openssl/certs

and run
  /usr/local/opt/openssl/bin/c_rehash

openssl is keg-only, which means it was not symlinked into /usr/local,
because Apple has deprecated use of OpenSSL in favor of its own TLS and crypto libraries.

If you need to have openssl first in your PATH run:
  echo 'export PATH="/usr/local/opt/openssl/bin:$PATH"' >> ~/.bash_profile

For compilers to find openssl you may need to set:
  export LDFLAGS="-L/usr/local/opt/openssl/lib"
  export CPPFLAGS="-I/usr/local/opt/openssl/include"

==> Summary
🍺  /usr/local/Cellar/openssl/1.0.2s: 1,795 files, 12.0MB
==> Installing php dependency: apr-util
==> Downloading https://homebrew.bintray.com/bottles/apr-util-1.6.1_1.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/e4/e4927892e16a3c9cf0d037c1777a6e5728fef2f5abfbc0af3
######################################################################## 100.0%
==> Pouring apr-util-1.6.1_1.mojave.bottle.tar.gz
==> Caveats
apr-util is keg-only, which means it was not symlinked into /usr/local,
because Apple's CLT package contains apr.

If you need to have apr-util first in your PATH run:
  echo 'export PATH="/usr/local/opt/apr-util/bin:$PATH"' >> ~/.bash_profile

==> Summary
🍺  /usr/local/Cellar/apr-util/1.6.1_1: 54 files, 777.5KB
==> Installing php dependency: argon2
==> Downloading https://homebrew.bintray.com/bottles/argon2-20190702_1.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/a7/a76192a41826619fc399e7f6de5e6cb1c8a5fbe6bea4f2c15
######################################################################## 100.0%
==> Pouring argon2-20190702_1.mojave.bottle.tar.gz
🍺  /usr/local/Cellar/argon2/20190702_1: 12 files, 591KB
==> Installing php dependency: aspell
==> Downloading https://homebrew.bintray.com/bottles/aspell-0.60.6.1_1.mojave.bottle.1.tar.gz
==> Downloading from https://akamai.bintray.com/ff/ff90482e98d4185c02676885cb9295f2e2c3fc0a59173981f
######################################################################## 100.0%
==> Pouring aspell-0.60.6.1_1.mojave.bottle.1.tar.gz
🍺  /usr/local/Cellar/aspell/0.60.6.1_1: 758 files, 314.8MB
==> Installing php dependency: autoconf
==> Downloading https://homebrew.bintray.com/bottles/autoconf-2.69.mojave.bottle.4.tar.gz
==> Downloading from https://akamai.bintray.com/97/9724736d34773b6e41e2434ffa28fe79feccccf7b7786e546
######################################################################## 100.0%
==> Pouring autoconf-2.69.mojave.bottle.4.tar.gz
==> Caveats
Emacs Lisp files have been installed to:
  /usr/local/share/emacs/site-lisp/autoconf
==> Summary
🍺  /usr/local/Cellar/autoconf/2.69: 71 files, 3.0MB
==> Installing php dependency: brotli
==> Downloading https://homebrew.bintray.com/bottles/brotli-1.0.7.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/d2/d2d4f821f8d9c52de15a4d3b5ddeab760ad9ae71105f1c859
######################################################################## 100.0%
==> Pouring brotli-1.0.7.mojave.bottle.tar.gz
🍺  /usr/local/Cellar/brotli/1.0.7: 25 files, 2.2MB
==> Installing php dependency: c-ares
==> Downloading https://homebrew.bintray.com/bottles/c-ares-1.15.0.mojave.bottle.tar.gz
######################################################################## 100.0%
==> Pouring c-ares-1.15.0.mojave.bottle.tar.gz
🍺  /usr/local/Cellar/c-ares/1.15.0: 72 files, 482.6KB
==> Installing php dependency: libidn
==> Downloading https://homebrew.bintray.com/bottles/libidn-1.35.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/d3/d3741facdecc039b53d64392b6f8f4377a01d38bd0ce388db
######################################################################## 100.0%
==> Pouring libidn-1.35.mojave.bottle.tar.gz
==> Caveats
Emacs Lisp files have been installed to:
  /usr/local/share/emacs/site-lisp/libidn
==> Summary
🍺  /usr/local/Cellar/libidn/1.35: 72 files, 1.4MB
==> Installing php dependency: libmetalink
==> Downloading https://homebrew.bintray.com/bottles/libmetalink-0.1.3.mojave.bottle.tar.gz
######################################################################## 100.0%
==> Pouring libmetalink-0.1.3.mojave.bottle.tar.gz
🍺  /usr/local/Cellar/libmetalink/0.1.3: 31 files, 178.9KB
==> Installing php dependency: libssh2
==> Downloading https://homebrew.bintray.com/bottles/libssh2-1.9.0.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/02/0226917e00c2f5c003c441c11d06852d582cd6ddcb42042bf
######################################################################## 100.0%
==> Pouring libssh2-1.9.0.mojave.bottle.tar.gz
🍺  /usr/local/Cellar/libssh2/1.9.0: 184 files, 911.9KB
==> Installing php dependency: jansson
==> Downloading https://homebrew.bintray.com/bottles/jansson-2.12.mojave.bottle.tar.gz
######################################################################## 100.0%
==> Pouring jansson-2.12.mojave.bottle.tar.gz
🍺  /usr/local/Cellar/jansson/2.12: 11 files, 157.5KB
==> Installing php dependency: jemalloc
==> Downloading https://homebrew.bintray.com/bottles/jemalloc-5.2.0.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/65/65f360353caa81de08b1b1882de13e8423d0f72d92a67bb3a
######################################################################## 100.0%
==> Pouring jemalloc-5.2.0.mojave.bottle.tar.gz
🍺  /usr/local/Cellar/jemalloc/5.2.0: 16 files, 1.9MB
==> Installing php dependency: libev
==> Downloading https://homebrew.bintray.com/bottles/libev-4.27.mojave.bottle.tar.gz
######################################################################## 100.0%
==> Pouring libev-4.27.mojave.bottle.tar.gz
🍺  /usr/local/Cellar/libev/4.27: 12 files, 438.6KB
==> Installing php dependency: libevent
==> Downloading https://homebrew.bintray.com/bottles/libevent-2.1.10.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/3f/3f43999f92de5174fa646e00cb0998801af4865b0274ebf6c
######################################################################## 100.0%
==> Pouring libevent-2.1.10.mojave.bottle.tar.gz
🍺  /usr/local/Cellar/libevent/2.1.10: 857 files, 2.2MB
==> Installing php dependency: nghttp2
==> Downloading https://homebrew.bintray.com/bottles/nghttp2-1.39.1.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/92/927d1c581966fc68c3c69c4a165b3f406d83fa1048dd870d6
######################################################################## 100.0%
==> Pouring nghttp2-1.39.1.mojave.bottle.tar.gz
🍺  /usr/local/Cellar/nghttp2/1.39.1: 26 files, 2.6MB
==> Installing php dependency: openldap
==> Downloading https://homebrew.bintray.com/bottles/openldap-2.4.47.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/07/07e1f0e3ec1a02340a82259e1ace713cfb362126404575032
######################################################################## 100.0%
==> Pouring openldap-2.4.47.mojave.bottle.tar.gz
==> Caveats
openldap is keg-only, which means it was not symlinked into /usr/local,
because macOS already provides this software and installing another version in
parallel can cause all kinds of trouble.

If you need to have openldap first in your PATH run:
  echo 'export PATH="/usr/local/opt/openldap/bin:$PATH"' >> ~/.bash_profile
  echo 'export PATH="/usr/local/opt/openldap/sbin:$PATH"' >> ~/.bash_profile

For compilers to find openldap you may need to set:
  export LDFLAGS="-L/usr/local/opt/openldap/lib"
  export CPPFLAGS="-I/usr/local/opt/openldap/include"

==> Summary
🍺  /usr/local/Cellar/openldap/2.4.47: 327 files, 6.5MB
==> Installing php dependency: rtmpdump
==> Downloading https://homebrew.bintray.com/bottles/rtmpdump-2.4+20151223.mojave.bottle.tar.gz
######################################################################## 100.0%
==> Pouring rtmpdump-2.4+20151223.mojave.bottle.tar.gz
🍺  /usr/local/Cellar/rtmpdump/2.4+20151223: 20 files, 418.5KB
==> Installing php dependency: curl-openssl
==> Downloading https://homebrew.bintray.com/bottles/curl-openssl-7.65.2.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/e5/e5c37bd7de02bbf8e493314b7efd2d3581e594640e6757cc0
######################################################################## 100.0%
==> Pouring curl-openssl-7.65.2.mojave.bottle.tar.gz
==> Caveats
curl-openssl is keg-only, which means it was not symlinked into /usr/local,
because macOS already provides this software and installing another version in
parallel can cause all kinds of trouble.

If you need to have curl-openssl first in your PATH run:
  echo 'export PATH="/usr/local/opt/curl-openssl/bin:$PATH"' >> ~/.bash_profile

For compilers to find curl-openssl you may need to set:
  export LDFLAGS="-L/usr/local/opt/curl-openssl/lib"
  export CPPFLAGS="-I/usr/local/opt/curl-openssl/include"

==> Summary
🍺  /usr/local/Cellar/curl-openssl/7.65.2: 451 files, 3.4MB
==> Installing php dependency: libtool
==> Downloading https://homebrew.bintray.com/bottles/libtool-2.4.6_1.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/c9/c92ab35c3706c255a36b733aa7a475159da9cf375c275d230
######################################################################## 100.0%
==> Pouring libtool-2.4.6_1.mojave.bottle.tar.gz
==> Caveats
In order to prevent conflicts with Apple's own libtool we have prepended a "g"
so, you have instead: glibtool and glibtoolize.
==> Summary
🍺  /usr/local/Cellar/libtool/2.4.6_1: 71 files, 3.7MB
==> Installing php dependency: unixodbc
==> Downloading https://homebrew.bintray.com/bottles/unixodbc-2.3.7.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/c4/c4f375c528496bae444824f4d01922e31a9a8b0c6822cd97d
######################################################################## 100.0%
==> Pouring unixodbc-2.3.7.mojave.bottle.tar.gz
🍺  /usr/local/Cellar/unixodbc/2.3.7: 46 files, 1.8MB
==> Installing php dependency: freetds
==> Downloading https://homebrew.bintray.com/bottles/freetds-1.1.6.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/50/501fc03b7af71fdc7dba603c95d7db725c55c09e384947b16
######################################################################## 100.0%
==> Pouring freetds-1.1.6.mojave.bottle.tar.gz
🍺  /usr/local/Cellar/freetds/1.1.6: 2,141 files, 13.1MB
==> Installing php dependency: libpng
==> Downloading https://homebrew.bintray.com/bottles/libpng-1.6.37.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/53/53bbd14cc27c86c16605e256e7646a1b5656c253abca08495
######################################################################## 100.0%
==> Pouring libpng-1.6.37.mojave.bottle.tar.gz
🍺  /usr/local/Cellar/libpng/1.6.37: 27 files, 1.2MB
==> Installing php dependency: freetype
==> Downloading https://homebrew.bintray.com/bottles/freetype-2.10.1.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/2f/2f5716f987df6f45a9d66e5f9af935bbb4202fe0b9850b6b0
######################################################################## 100.0%
==> Pouring freetype-2.10.1.mojave.bottle.tar.gz
🍺  /usr/local/Cellar/freetype/2.10.1: 61 files, 2.2MB
==> Installing php dependency: gettext
==> Downloading https://homebrew.bintray.com/bottles/gettext-0.20.1.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/fa/fa2096f80238b8f4d9f3724d526626ab4db5c0586f3746ee1
######################################################################## 100.0%
==> Pouring gettext-0.20.1.mojave.bottle.tar.gz
==> Caveats
gettext is keg-only, which means it was not symlinked into /usr/local,
because macOS provides the BSD gettext library & some software gets confused if both are in the library path.

If you need to have gettext first in your PATH run:
  echo 'export PATH="/usr/local/opt/gettext/bin:$PATH"' >> ~/.bash_profile

For compilers to find gettext you may need to set:
  export LDFLAGS="-L/usr/local/opt/gettext/lib"
  export CPPFLAGS="-I/usr/local/opt/gettext/include"

==> Summary
🍺  /usr/local/Cellar/gettext/0.20.1: 1,899 files, 18.5MB
==> Installing php dependency: libffi
==> Downloading https://homebrew.bintray.com/bottles/libffi-3.2.1.mojave.bottle.tar.gz
######################################################################## 100.0%
==> Pouring libffi-3.2.1.mojave.bottle.tar.gz
==> Caveats
libffi is keg-only, which means it was not symlinked into /usr/local,
because some formulae require a newer version of libffi.

For compilers to find libffi you may need to set:
  export LDFLAGS="-L/usr/local/opt/libffi/lib"

==> Summary
🍺  /usr/local/Cellar/libffi/3.2.1: 16 files, 296.8KB
==> Installing php dependency: pcre
==> Downloading https://homebrew.bintray.com/bottles/pcre-8.43.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/08/08e7414a7641d1e184c936537ff67f72f52649374d2308b89
######################################################################## 100.0%
==> Pouring pcre-8.43.mojave.bottle.tar.gz
🍺  /usr/local/Cellar/pcre/8.43: 204 files, 5.5MB
==> Installing php dependency: gdbm
==> Downloading https://homebrew.bintray.com/bottles/gdbm-1.18.1.mojave.bottle.1.tar.gz
######################################################################## 100.0%
==> Pouring gdbm-1.18.1.mojave.bottle.1.tar.gz
🍺  /usr/local/Cellar/gdbm/1.18.1: 20 files, 586.8KB
==> Installing php dependency: readline
==> Downloading https://homebrew.bintray.com/bottles/readline-8.0.0_1.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/fa/faab004773e6449dd97971311cb62a9bbaa44f1483b82640e
######################################################################## 100.0%
==> Pouring readline-8.0.0_1.mojave.bottle.tar.gz
==> Caveats
readline is keg-only, which means it was not symlinked into /usr/local,
because macOS provides the BSD libedit library, which shadows libreadline.
In order to prevent conflicts when programs look for libreadline we are
defaulting this GNU Readline installation to keg-only.

For compilers to find readline you may need to set:
  export LDFLAGS="-L/usr/local/opt/readline/lib"
  export CPPFLAGS="-I/usr/local/opt/readline/include"

==> Summary
🍺  /usr/local/Cellar/readline/8.0.0_1: 48 files, 1.5MB
==> Installing php dependency: sqlite
==> Downloading https://homebrew.bintray.com/bottles/sqlite-3.28.0.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/e3/e360850758d2104b4ae9eab8ae57903a37b62c550c779ddf3
######################################################################## 100.0%
==> Pouring sqlite-3.28.0.mojave.bottle.tar.gz
==> Caveats
sqlite is keg-only, which means it was not symlinked into /usr/local,
because macOS provides an older sqlite3.

If you need to have sqlite first in your PATH run:
  echo 'export PATH="/usr/local/opt/sqlite/bin:$PATH"' >> ~/.bash_profile

For compilers to find sqlite you may need to set:
  export LDFLAGS="-L/usr/local/opt/sqlite/lib"
  export CPPFLAGS="-I/usr/local/opt/sqlite/include"

==> Summary
🍺  /usr/local/Cellar/sqlite/3.28.0: 11 files, 3.7MB
==> Installing php dependency: xz
==> Downloading https://homebrew.bintray.com/bottles/xz-5.2.4.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/01/010667293df282c8bceede3bcd36953dd57c56cef608d09a5
######################################################################## 100.0%
==> Pouring xz-5.2.4.mojave.bottle.tar.gz
🍺  /usr/local/Cellar/xz/5.2.4: 92 files, 1MB
==> Installing php dependency: python
==> Downloading https://homebrew.bintray.com/bottles/python-3.7.4.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/81/81fc6e5914a16387bd09387ce08e99122ea3ad65c55ded42e
######################################################################## 100.0%
==> Pouring python-3.7.4.mojave.bottle.tar.gz
==> /usr/local/Cellar/python/3.7.4/bin/python3 -s setup.py --no-user-cfg install --force --verbose -
==> /usr/local/Cellar/python/3.7.4/bin/python3 -s setup.py --no-user-cfg install --force --verbose -
==> /usr/local/Cellar/python/3.7.4/bin/python3 -s setup.py --no-user-cfg install --force --verbose -
==> Caveats
Python has been installed as
  /usr/local/bin/python3

Unversioned symlinks `python`, `python-config`, `pip` etc. pointing to
`python3`, `python3-config`, `pip3` etc., respectively, have been installed into
  /usr/local/opt/python/libexec/bin

If you need Homebrew's Python 2.7 run
  brew install python@2

You can install Python packages with
  pip3 install <package>
They will install into the site-package directory
  /usr/local/lib/python3.7/site-packages

See: https://docs.brew.sh/Homebrew-and-Python
==> Summary
🍺  /usr/local/Cellar/python/3.7.4: 3,865 files, 60MB
==> Installing php dependency: glib
==> Downloading https://homebrew.bintray.com/bottles/glib-2.60.5.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/1f/1fa43a8867d3d92d43d6921c8e04da706983bf423eebd08b1
######################################################################## 100.0%
==> Pouring glib-2.60.5.mojave.bottle.tar.gz
🍺  /usr/local/Cellar/glib/2.60.5: 429 files, 15.2MB
==> Installing php dependency: gmp
==> Downloading https://homebrew.bintray.com/bottles/gmp-6.1.2_2.mojave.bottle.1.tar.gz
==> Downloading from https://akamai.bintray.com/84/84f74594086bccc53bdb141f4d06d7847680374e255ebe016
######################################################################## 100.0%
==> Pouring gmp-6.1.2_2.mojave.bottle.1.tar.gz
🍺  /usr/local/Cellar/gmp/6.1.2_2: 18 files, 3.1MB
==> Installing php dependency: jpeg
==> Downloading https://homebrew.bintray.com/bottles/jpeg-9c.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/1d/1daa0fc0c197d96dd4e1afddb9ad576951a15aafd6b85138b
######################################################################## 100.0%
==> Pouring jpeg-9c.mojave.bottle.tar.gz
🍺  /usr/local/Cellar/jpeg/9c: 21 files, 733.4KB
==> Installing php dependency: libpq
==> Downloading https://homebrew.bintray.com/bottles/libpq-11.3.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/46/464e74593da2d7b8c9375d74346e7d6216c61d0d37359e78d
######################################################################## 100.0%
==> Pouring libpq-11.3.mojave.bottle.tar.gz
==> Caveats
libpq is keg-only, which means it was not symlinked into /usr/local,
because conflicts with postgres formula.

If you need to have libpq first in your PATH run:
  echo 'export PATH="/usr/local/opt/libpq/bin:$PATH"' >> ~/.bash_profile

For compilers to find libpq you may need to set:
  export LDFLAGS="-L/usr/local/opt/libpq/lib"
  export CPPFLAGS="-I/usr/local/opt/libpq/include"

==> Summary
🍺  /usr/local/Cellar/libpq/11.3: 2,205 files, 22.4MB
==> Installing php dependency: libsodium
==> Downloading https://homebrew.bintray.com/bottles/libsodium-1.0.18.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/f0/f0c5a9db15c8798edfa438b6911c6e354591f22ae3ed53696
######################################################################## 100.0%
==> Pouring libsodium-1.0.18.mojave.bottle.tar.gz
🍺  /usr/local/Cellar/libsodium/1.0.18: 73 files, 1009.3KB
==> Installing php dependency: libzip
==> Downloading https://homebrew.bintray.com/bottles/libzip-1.5.2.mojave.bottle.tar.gz
######################################################################## 100.0%
==> Pouring libzip-1.5.2.mojave.bottle.tar.gz
🍺  /usr/local/Cellar/libzip/1.5.2: 134 files, 579.6KB
==> Installing php dependency: tidy-html5
==> Downloading https://homebrew.bintray.com/bottles/tidy-html5-5.6.0.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/bd/bd3ca7dc82a913c8576716cbcc957260251132f6dd7b8c526
######################################################################## 100.0%
==> Pouring tidy-html5-5.6.0.mojave.bottle.tar.gz
🍺  /usr/local/Cellar/tidy-html5/5.6.0: 14 files, 2.6MB
==> Installing php dependency: libtiff
==> Downloading https://homebrew.bintray.com/bottles/libtiff-4.0.10_1.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/6e/6ecdca6159e5e4db0ec0fcbddbc76dbdc65e496139b131a05
######################################################################## 100.0%
==> Pouring libtiff-4.0.10_1.mojave.bottle.tar.gz
🍺  /usr/local/Cellar/libtiff/4.0.10_1: 246 files, 3.5MB
==> Installing php dependency: webp
==> Downloading https://homebrew.bintray.com/bottles/webp-1.0.3.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/34/347c02d4de7afe9e5e73391d293a19f89d40957fafd757656
######################################################################## 100.0%
==> Pouring webp-1.0.3.mojave.bottle.tar.gz
🍺  /usr/local/Cellar/webp/1.0.3: 39 files, 2.1MB
==> Installing php
==> Downloading https://homebrew.bintray.com/bottles/php-7.3.7.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/c8/c8ed5f512b34d4cd4082aaea40143ba8b198d8b8372b8d53a
######################################################################## 100.0%
==> Pouring php-7.3.7.mojave.bottle.tar.gz
==> /usr/local/Cellar/php/7.3.7/bin/pear config-set php_ini /usr/local/etc/php/7.3/php.ini system
==> /usr/local/Cellar/php/7.3.7/bin/pear config-set php_dir /usr/local/share/pear system
==> /usr/local/Cellar/php/7.3.7/bin/pear config-set doc_dir /usr/local/share/pear/doc system
==> /usr/local/Cellar/php/7.3.7/bin/pear config-set ext_dir /usr/local/lib/php/pecl/20180731 system
==> /usr/local/Cellar/php/7.3.7/bin/pear config-set bin_dir /usr/local/opt/php/bin system
==> /usr/local/Cellar/php/7.3.7/bin/pear config-set data_dir /usr/local/share/pear/data system
==> /usr/local/Cellar/php/7.3.7/bin/pear config-set cfg_dir /usr/local/share/pear/cfg system
==> /usr/local/Cellar/php/7.3.7/bin/pear config-set www_dir /usr/local/share/pear/htdocs system
==> /usr/local/Cellar/php/7.3.7/bin/pear config-set man_dir /usr/local/share/man system
==> /usr/local/Cellar/php/7.3.7/bin/pear config-set test_dir /usr/local/share/pear/test system
==> /usr/local/Cellar/php/7.3.7/bin/pear config-set php_bin /usr/local/opt/php/bin/php system
==> /usr/local/Cellar/php/7.3.7/bin/pear update-channels
==> Caveats
To enable PHP in Apache add the following to httpd.conf and restart Apache:
    LoadModule php7_module /usr/local/opt/php/lib/httpd/modules/libphp7.so

    <FilesMatch \.php$>
        SetHandler application/x-httpd-php
    </FilesMatch>

Finally, check DirectoryIndex includes index.php
    DirectoryIndex index.php index.html

The php.ini and php-fpm.ini file can be found in:
    /usr/local/etc/php/7.3/

To have launchd start php now and restart at login:
  brew services start php
Or, if you don't want/need a background service you can just run:
  php-fpm
==> Summary
🍺  /usr/local/Cellar/php/7.3.7: 521 files, 77.0MB
==> Caveats
==> apr
apr is keg-only, which means it was not symlinked into /usr/local,
because Apple's CLT package contains apr.

If you need to have apr first in your PATH run:
  echo 'export PATH="/usr/local/opt/apr/bin:$PATH"' >> ~/.bash_profile

==> openssl
A CA file has been bootstrapped using certificates from the SystemRoots
keychain. To add additional certificates (e.g. the certificates added in
the System keychain), place .pem files in
  /usr/local/etc/openssl/certs

and run
  /usr/local/opt/openssl/bin/c_rehash

openssl is keg-only, which means it was not symlinked into /usr/local,
because Apple has deprecated use of OpenSSL in favor of its own TLS and crypto libraries.

If you need to have openssl first in your PATH run:
  echo 'export PATH="/usr/local/opt/openssl/bin:$PATH"' >> ~/.bash_profile

For compilers to find openssl you may need to set:
  export LDFLAGS="-L/usr/local/opt/openssl/lib"
  export CPPFLAGS="-I/usr/local/opt/openssl/include"

==> apr-util
apr-util is keg-only, which means it was not symlinked into /usr/local,
because Apple's CLT package contains apr.

If you need to have apr-util first in your PATH run:
  echo 'export PATH="/usr/local/opt/apr-util/bin:$PATH"' >> ~/.bash_profile

==> autoconf
Emacs Lisp files have been installed to:
  /usr/local/share/emacs/site-lisp/autoconf
==> libidn
Emacs Lisp files have been installed to:
  /usr/local/share/emacs/site-lisp/libidn
==> openldap
openldap is keg-only, which means it was not symlinked into /usr/local,
because macOS already provides this software and installing another version in
parallel can cause all kinds of trouble.

If you need to have openldap first in your PATH run:
  echo 'export PATH="/usr/local/opt/openldap/bin:$PATH"' >> ~/.bash_profile
  echo 'export PATH="/usr/local/opt/openldap/sbin:$PATH"' >> ~/.bash_profile

For compilers to find openldap you may need to set:
  export LDFLAGS="-L/usr/local/opt/openldap/lib"
  export CPPFLAGS="-I/usr/local/opt/openldap/include"

==> curl-openssl
curl-openssl is keg-only, which means it was not symlinked into /usr/local,
because macOS already provides this software and installing another version in
parallel can cause all kinds of trouble.

If you need to have curl-openssl first in your PATH run:
  echo 'export PATH="/usr/local/opt/curl-openssl/bin:$PATH"' >> ~/.bash_profile

For compilers to find curl-openssl you may need to set:
  export LDFLAGS="-L/usr/local/opt/curl-openssl/lib"
  export CPPFLAGS="-I/usr/local/opt/curl-openssl/include"

==> libtool
In order to prevent conflicts with Apple's own libtool we have prepended a "g"
so, you have instead: glibtool and glibtoolize.
==> gettext
gettext is keg-only, which means it was not symlinked into /usr/local,
because macOS provides the BSD gettext library & some software gets confused if both are in the library path.

If you need to have gettext first in your PATH run:
  echo 'export PATH="/usr/local/opt/gettext/bin:$PATH"' >> ~/.bash_profile

For compilers to find gettext you may need to set:
  export LDFLAGS="-L/usr/local/opt/gettext/lib"
  export CPPFLAGS="-I/usr/local/opt/gettext/include"

==> libffi
libffi is keg-only, which means it was not symlinked into /usr/local,
because some formulae require a newer version of libffi.

For compilers to find libffi you may need to set:
  export LDFLAGS="-L/usr/local/opt/libffi/lib"

==> readline
readline is keg-only, which means it was not symlinked into /usr/local,
because macOS provides the BSD libedit library, which shadows libreadline.
In order to prevent conflicts when programs look for libreadline we are
defaulting this GNU Readline installation to keg-only.

For compilers to find readline you may need to set:
  export LDFLAGS="-L/usr/local/opt/readline/lib"
  export CPPFLAGS="-I/usr/local/opt/readline/include"

==> sqlite
sqlite is keg-only, which means it was not symlinked into /usr/local,
because macOS provides an older sqlite3.

If you need to have sqlite first in your PATH run:
  echo 'export PATH="/usr/local/opt/sqlite/bin:$PATH"' >> ~/.bash_profile

For compilers to find sqlite you may need to set:
  export LDFLAGS="-L/usr/local/opt/sqlite/lib"
  export CPPFLAGS="-I/usr/local/opt/sqlite/include"

==> python
Python has been installed as
  /usr/local/bin/python3

Unversioned symlinks `python`, `python-config`, `pip` etc. pointing to
`python3`, `python3-config`, `pip3` etc., respectively, have been installed into
  /usr/local/opt/python/libexec/bin

If you need Homebrew's Python 2.7 run
  brew install python@2

You can install Python packages with
  pip3 install <package>
They will install into the site-package directory
  /usr/local/lib/python3.7/site-packages

See: https://docs.brew.sh/Homebrew-and-Python
==> libpq
libpq is keg-only, which means it was not symlinked into /usr/local,
because conflicts with postgres formula.

If you need to have libpq first in your PATH run:
  echo 'export PATH="/usr/local/opt/libpq/bin:$PATH"' >> ~/.bash_profile

For compilers to find libpq you may need to set:
  export LDFLAGS="-L/usr/local/opt/libpq/lib"
  export CPPFLAGS="-I/usr/local/opt/libpq/include"

==> php
To enable PHP in Apache add the following to httpd.conf and restart Apache:
    LoadModule php7_module /usr/local/opt/php/lib/httpd/modules/libphp7.so

    <FilesMatch \.php$>
        SetHandler application/x-httpd-php
    </FilesMatch>

Finally, check DirectoryIndex includes index.php
    DirectoryIndex index.php index.html

The php.ini and php-fpm.ini file can be found in:
    /usr/local/etc/php/7.3/

To have launchd start php now and restart at login:
  brew services start php
Or, if you don't want/need a background service you can just run:
  php-fpm
Deciano:~ cypriannwosu$ brew install composer
Warning: composer 1.8.6 is already installed and up-to-date
To reinstall 1.8.6, run `brew reinstall composer`
Deciano:~ cypriannwosu$ brew reinstall composer
==> Reinstalling composer 
==> Downloading https://getcomposer.org/download/1.8.6/composer.phar
Already downloaded: /Users/cypriannwosu/Library/Caches/Homebrew/downloads/4e88dac5239d403f3be965ee40f9b326341afcc0211820f6b08146dde2fecf31--composer.phar
🍺  /usr/local/Cellar/composer/1.8.6: 3 files, 1.8MB, built in 3 seconds
Deciano:~ cypriannwosu$ php -v
PHP 7.3.7 (cli) (built: Jul  5 2019 12:44:05) ( NTS )
Copyright (c) 1997-2018 The PHP Group
Zend Engine v3.3.7, Copyright (c) 1998-2018 Zend Technologies
    with Zend OPcache v7.3.7, Copyright (c) 1999-2018, by Zend Technologies
Deciano:etc cypriannwosu$ cd apache2
Deciano:apache2 cypriannwosu$ ls
extra			httpd.conf.pre-update	mime.types		other
httpd.conf		magic			original		users
Deciano:apache2 cypriannwosu$ nano httpd.conf
Deciano:apache2 cypriannwosu$ nano httpd.conf
Deciano:apache2 cypriannwosu$ nano httpd.conf
Deciano:apache2 cypriannwosu$ sudo cp httpd.conf
Password:
usage: cp [-R [-H | -L | -P]] [-fi | -n] [-apvXc] source_file target_file
       cp [-R [-H | -L | -P]] [-fi | -n] [-apvXc] source_file ... target_directory
Deciano:apache2 cypriannwosu$ sudo cp httpd.conf httpd.conf-backup-20190717
Deciano:apache2 cypriannwosu$ apache status
-bash: apache: command not found
Deciano:apache2 cypriannwosu$ ls
extra				httpd.conf.pre-update		original
httpd.conf			magic				other
httpd.conf-backup-20190717	mime.types			users
Deciano:apache2 cypriannwosu$ LoadModule php7_module /usr/local/opt/php/lib/httpd/modules/libphp7.so
-bash: LoadModule: command not found
Deciano:apache2 cypriannwosu$ 
Deciano:apache2 cypriannwosu$     <FilesMatch \.php$>
-bash: syntax error near unexpected token `newline'
Deciano:apache2 cypriannwosu$ sudo nano httpd.conf
Password:

	# In the file, uncomment the line:
	#	LoadModule php7_module libexec/apache2/libphp7.so
	#
	# Add the following lines to the end of the file:
	#	<FilesMatch \.php$>
        #		SetHandler application/x-httpd-php
    	#	</FilesMatch>
	#
	# Find line
	#	DirectoryIndex index.html
	# and replace with line
	#	DirectoryIndex index.php index.html
	#
	# Save and exit file, then, restart Apache

Deciano:apache2 cypriannwosu$ sudo apachectl restart
Deciano:apache2 cypriannwosu$ brew install httrack
Updating Homebrew...
==> Downloading https://homebrew.bintray.com/bottles/httrack-3.49.2.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/85/8542fa3b1a4badf7290315b4174d5026c81e79c5add754321
######################################################################## 100.0%
==> Pouring httrack-3.49.2.mojave.bottle.tar.gz
🍺  /usr/local/Cellar/httrack/3.49.2: 235 files, 4MB

Deciano:.composer cypriannwosu$ homebrew install mysql
-bash: homebrew: command not found
Deciano:.composer cypriannwosu$ brew install mysql
Updating Homebrew...
==> Downloading https://homebrew.bintray.com/bottles/mysql-8.0.16.mojave.bottle.tar.gz
==> Downloading from https://akamai.bintray.com/65/65e6629740ca75ceaae575b4cc68f2cf133619d08cdcd4cb2
######################################################################## 100.0%
==> Pouring mysql-8.0.16.mojave.bottle.tar.gz
==> /usr/local/Cellar/mysql/8.0.16/bin/mysqld --initialize-insecure --user=cypriannwosu --basedir=/u
==> Caveats
We've installed your MySQL database without a root password. To secure it run:
    mysql_secure_installation

MySQL is configured to only allow connections from localhost by default

To connect run:
    mysql -uroot

To have launchd start mysql now and restart at login:
  brew services start mysql
Or, if you don't want/need a background service you can just run:
  mysql.server start
==> Summary
🍺  /usr/local/Cellar/mysql/